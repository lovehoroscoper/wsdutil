<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:webflow="http://www.springframework.org/schema/webflow-config"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/mvc 
     http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
     http://www.springframework.org/schema/webflow-config 
     http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd
     ">

	<import resource="spring-configuration/propertyFileConfigurer.xml"/>

	<context:annotation-config />
	<context:component-scan base-package="org.gonetbar.*.*">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:annotation-driven />

	<mvc:interceptors> 
		<mvc:interceptor>
			<mvc:mapping path="/login" />
			<bean class="org.gonetbar.ssa.interceptor.ThirdLoginValidInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/login" />
			<bean class="org.gonetbar.ssa.interceptor.LoginRedirectInterceptor">
				<property name="loginUrl" value="/login"/>
				<property name="redirect" value="true"/>
				<property name="redirectUrl" value="/user/index.do"/>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="oauthAction" class="org.jasig.cas.support.oauth.web.flow.Kankan21OAuthAction">
		<property name="centralAuthenticationService" ref="centralAuthenticationService" />
	 	<property name="configuration" ref="providersDefinition" />
	</bean>

  <!-- Theme Resolver -->
  <bean id="themeResolver" class="org.jasig.cas.services.web.ServiceThemeResolver"
        p:defaultThemeName="${cas.themeResolver.defaultThemeName}"
        p:argumentExtractors-ref="argumentExtractors"
        p:servicesManager-ref="servicesManager">
    <property name="mobileBrowsers">
      <map>
        <entry key=".*iPhone.*" value="iphone"/>
        <entry key=".*Android.*" value="iphone"/>
        <entry key=".*Safari.*Pre.*" value="iphone"/>
        <entry key=".*Nokia.*AppleWebKit.*" value="iphone"/>
      </map>
    </property>
  </bean>

  <!-- View Resolver -->
  <bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver"
        p:order="0">
    <property name="basenames">
      <list>
        <value>${cas.viewResolver.basename}</value>
        <value>protocol_views</value>
      </list>
    </property>
  </bean>

  <bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver" 
  		p:order="1" 
  		p:location="/WEB-INF/view/views.xml" 
  />
  
  <!-- Locale Resolver -->
  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>

  <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>

  <bean id="urlBasedViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"
        p:viewClass="org.springframework.web.servlet.view.InternalResourceView"
        p:prefix="/WEB-INF/view/jsp/"
        p:suffix=".jsp"
        p:order="2"/>
  
  <bean id="errorHandlerResolver" class="org.jasig.cas.web.NoSuchFlowExecutionExceptionResolver"/>

  <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>

  <bean
      id="handlerMappingC"
      class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property name="mappings">
      <props>
        <prop key="/logout">logoutController</prop>
        <prop key="/validate">legacyValidateController</prop>
        <prop key="/serviceValidate">serviceValidateController</prop>
        <prop key="/authorizationFailure.html">passThroughController</prop>
        <prop key="/403.html">passThroughController</prop>
        <prop key="/services/loggedOut.html">serviceLogoutViewController</prop>
        <prop key="/services/*">manageRegisteredServicesMultiActionController</prop>
        <prop key="/services/add.html">addRegisteredServiceSimpleFormController</prop>
        <!-- 
        <prop key="/proxy">proxyController</prop>
        <prop key="/proxyValidate">proxyValidateController</prop>
        <prop key="/samlValidate">samlValidateController</prop>
        <prop key="/services/edit.html">editRegisteredServiceSimpleFormController</prop>
        <prop key="/services/viewStatistics.html">viewStatisticsController</prop>
        <prop key="/openid/*">openIdProviderController</prop>
        <prop key="/status">healthCheckController</prop>
         -->
      </props>
    </property>
    <property name="alwaysUseFullPath" value="true"/>
    <!--
     uncomment this to enable sending PageRequest events.
     <property
       name="interceptors">
       <list>
         <ref bean="pageRequestHandlerInterceptorAdapter" />
       </list>
     </property>
      -->
  </bean>

  <bean id="passThroughController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

  <bean
      id="openIdProviderController"
      class="org.jasig.cas.web.OpenIdProviderController"
      p:loginUrl="${cas.securityContext.casProcessingFilterEntryPoint.loginUrl}"/>

  <bean
      id="serviceLogoutViewController"
      class="org.springframework.web.servlet.mvc.ParameterizableViewController"
      p:viewName="serviceLogoutView"/>

  <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping" p:flowRegistry-ref="flowRegistry"
        p:order="2">
    <property name="interceptors">
      <ref local="localeChangeInterceptor"/>
    </property>
  </bean>


  <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter"
        p:flowExecutor-ref="flowExecutor"
        p:flowUrlHandler-ref="flowUrlHandler"/>

  <bean id="flowUrlHandler" class="org.jasig.cas.web.flow.CasDefaultFlowUrlHandler"/>

  <webflow:flow-executor id="flowExecutor" flow-registry="flowRegistry">
    <webflow:flow-execution-attributes>
      <webflow:always-redirect-on-pause value="false"/>
      <webflow:redirect-in-same-state value="false" />
    </webflow:flow-execution-attributes>
    <webflow:flow-execution-listeners>
      <webflow:listener ref="terminateWebSessionListener" />
    </webflow:flow-execution-listeners>
  </webflow:flow-executor>

  <webflow:flow-registry id="flowRegistry" flow-builder-services="builder">
    <webflow:flow-location path="/WEB-INF/login-webflow.xml" id="login"/>
  </webflow:flow-registry>

  <webflow:flow-builder-services id="builder" view-factory-creator="viewFactoryCreator"
                                 expression-parser="expressionParser"/>

  <bean id="terminateWebSessionListener" class="org.jasig.cas.web.flow.TerminateWebSessionListener"
      p:serviceManagerUrl="${cas.securityContext.serviceProperties.service}" />

  <bean id="expressionParser" class="org.springframework.webflow.expression.WebFlowOgnlExpressionParser"/>

  <bean id="viewFactoryCreator" class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
    <property name="viewResolvers">
      <list>
        <ref local="viewResolver"/>
      </list>
    </property>
  </bean>
  <bean id="proxyValidateController" class="org.jasig.cas.web.ServiceValidateController"
        p:centralAuthenticationService-ref="centralAuthenticationService"
        p:proxyHandler-ref="proxy20Handler"
        p:argumentExtractor-ref="casArgumentExtractor"/>

  <bean id="serviceValidateController" class="org.jasig.cas.web.ServiceValidateController"
        p:validationSpecificationClass="org.jasig.cas.validation.Cas20WithoutProxyingValidationSpecification"
        p:centralAuthenticationService-ref="centralAuthenticationService"
        p:proxyHandler-ref="proxy20Handler"
        p:argumentExtractor-ref="casArgumentExtractor"/>

  <bean id="samlValidateController" class="org.jasig.cas.web.ServiceValidateController"
        p:validationSpecificationClass="org.jasig.cas.validation.Cas20WithoutProxyingValidationSpecification"
        p:centralAuthenticationService-ref="centralAuthenticationService"
        p:proxyHandler-ref="proxy20Handler"
        p:argumentExtractor-ref="samlArgumentExtractor"
        p:successView="casSamlServiceSuccessView"
        p:failureView="casSamlServiceFailureView"/>

  <bean id="legacyValidateController" class="org.jasig.cas.web.ServiceValidateController"
        p:proxyHandler-ref="proxy10Handler"
        p:successView="cas1ServiceSuccessView"
        p:failureView="cas1ServiceFailureView"
        p:validationSpecificationClass="org.jasig.cas.validation.Cas10ProtocolValidationSpecification"
        p:centralAuthenticationService-ref="centralAuthenticationService"
        p:argumentExtractor-ref="casArgumentExtractor"/>

  <bean id="proxyController" class="org.jasig.cas.web.ProxyController"
        p:centralAuthenticationService-ref="centralAuthenticationService"/>

  <bean id="viewStatisticsController" class="org.jasig.cas.web.StatisticsController"
        p:casTicketSuffix="${host.name}">
    <constructor-arg index="0" ref="ticketRegistry"/>
  </bean>

  <bean id="logoutController" class="org.jasig.cas.web.Kan21LogoutController"
        p:centralAuthenticationService-ref="centralAuthenticationService"
        p:logoutView="casLogoutView"
        p:warnCookieGenerator-ref="warnCookieGenerator"
        p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator"
        p:servicesManager-ref="servicesManager"
        p:followServiceRedirects="${cas.logout.followServiceRedirects:false}">
        <property name="handler" ref="logoutHandler"/>
  </bean>

  <bean id="healthCheckController" class="org.jasig.cas.web.HealthCheckController"
        p:healthCheckMonitor-ref="healthCheckMonitor"/>

  <bean id="initialFlowSetupAction" class="org.jasig.cas.web.flow.InitialFlowSetupAction"
        p:argumentExtractors-ref="argumentExtractors"
        p:warnCookieGenerator-ref="warnCookieGenerator"
        p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator"/>

  <bean id="authenticationViaFormAction" class="org.jasig.cas.web.flow.AuthenticationViaFormAction"
        p:centralAuthenticationService-ref="centralAuthenticationService"
        p:warnCookieGenerator-ref="warnCookieGenerator"/>

  <bean id="generateServiceTicketAction" class="org.jasig.cas.web.flow.GenerateServiceTicketAction"
        p:centralAuthenticationService-ref="centralAuthenticationService"/>

  <bean id="sendTicketGrantingTicketAction" class="org.jasig.cas.web.flow.SendTicketGrantingTicketAction"
        p:centralAuthenticationService-ref="centralAuthenticationService"
        p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator"/>

  <bean id="gatewayServicesManagementCheck" class="org.jasig.cas.web.flow.GatewayServicesManagementCheck">
    <constructor-arg index="0" ref="servicesManager"/>
  </bean>

  <bean id="serviceAuthorizationCheck" class="org.jasig.cas.web.flow.ServiceAuthorizationCheck">
        <constructor-arg index="0" ref="servicesManager"/>
  </bean>

  <bean id="generateLoginTicketAction" class="org.jasig.cas.web.flow.GenerateLoginTicketAction"
        p:ticketIdGenerator-ref="loginTicketUniqueIdGenerator"/>

  <bean id="addRegisteredServiceSimpleFormController"
        class="org.jasig.cas.services.web.RegisteredServiceSimpleFormController"
        p:formView="addServiceView"
        p:successView="addServiceView"
        p:commandName="registeredService"
        p:validator-ref="registeredServiceValidator"
        p:sessionForm="true">
    <constructor-arg index="0" ref="servicesManager"/>
    <constructor-arg index="1" ref="attributeRepository"/>
  </bean>

  <bean id="editRegisteredServiceSimpleFormController"
        class="org.jasig.cas.services.web.RegisteredServiceSimpleFormController"
        p:formView="editServiceView"
        p:successView="editServiceView"
        p:commandName="registeredService"
        p:validator-ref="registeredServiceValidator"
        p:sessionForm="false">
    <constructor-arg index="0" ref="servicesManager"/>
    <constructor-arg index="1" ref="attributeRepository"/>
  </bean>

  <bean id="registeredServiceValidator" class="org.jasig.cas.services.web.support.RegisteredServiceValidator"
        p:servicesManager-ref="servicesManager" 
        p:personAttributeDao-ref="attributeRepository" />

  <bean id="manageRegisteredServicesMultiActionController"
        class="org.jasig.cas.services.web.ManageRegisteredServicesMultiActionController">
    <constructor-arg index="0" ref="servicesManager"/>
    <constructor-arg index="1" value="${cas.securityContext.serviceProperties.service}"/>
  </bean>

  <bean id="messageInterpolator" class="org.jasig.cas.util.SpringAwareMessageMessageInterpolator"/>

  <bean id="credentialsValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
        p:messageInterpolator-ref="messageInterpolator"/>

  <bean id="addLoginTicketCookieAction" class="org.gonetbar.ssa.cookie.AddLoginTicketCookieAction"
        p:ticketRegistry-ref="ticketRegistry"
        p:cacheUserCookieGenerator-ref="cacheUserCookieGenerator"/>

	<!-- 系统错误转发配置[并记录错误日志]   -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error"></property><!-- 默认为500，系统错误(error.jsp)  -->
		<property name="defaultStatusCode" value="500"></property>
		<property name="statusCodes"><!-- 配置多个statusCode -->
		  <props>    
		      <prop key="error">500</prop>
		  </props>    
		</property>    
		<property name="exceptionMappings">
			<props>
				<prop key="java.sql.SQLException">dbError</prop><!-- 数据库错误(dbError.jsp) -->
				<prop key="java.lang.RuntimeException">runtimeError</prop><!-- Runtime  -->
				<prop key="java.lang.Exception">unknowError</prop><!-- 其他错误为'未定义错误'(unknowError.jsp)  -->
			</props>
		</property>
	</bean>

</beans>