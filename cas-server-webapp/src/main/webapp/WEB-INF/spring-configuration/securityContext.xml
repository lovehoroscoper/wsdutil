<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	<description>
		This is the configuration file for the Spring Security configuration used with the services management tool. You shouldn't
		have to modify
		anything in this file directly. The configuration options should all be in the cas.properties file.
	</description>

	<!-- 增加一个自定义的filter,放在FILTER_SECURITY_INTERCEPTOR之前,实现用户、角色、权限、资源的数据库管理。 -->
	<sec:http entry-point-ref="casProcessingFilterEntryPoint" auto-config="true">
		<sec:intercept-url pattern="/services/loggedout.html" filters="none" />
		<sec:intercept-url pattern="/weisd/*" access="ROLE_WEISD" />
		<sec:intercept-url pattern="/**" access="${cas.securityContext.serviceProperties.adminRoles}" />
		<sec:logout logout-url="/services/logout.html" logout-success-url="/services/loggedOut.html" />
		<sec:custom-filter ref="casProcessingFilter" after="CAS_FILTER" />
		<sec:custom-filter ref="ssaFilter" after="FILTER_SECURITY_INTERCEPTOR" />
	</sec:http>

	<sec:authentication-manager alias="casAuthenticationManager">
		<sec:authentication-provider ref="casAuthenticationProvider" />
	</sec:authentication-manager>

	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service" value="${cas.securityContext.serviceProperties.service}" />
		<property name="sendRenew" value="false" />
	</bean>

	<bean id="casProcessingFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="casAuthenticationManager" />
		<property name="filterProcessesUrl" value="/services/j_acegi_cas_security_check" />
		<property name="authenticationSuccessHandler">
			<bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
				<property name="alwaysUseDefaultTargetUrl" value="true" />
				<property name="defaultTargetUrl" value="/services/manage.html" />
			</bean>
		</property>
		<property name="authenticationFailureHandler">
			<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<constructor-arg index="0" value="/authorizationFailure.html" />
			</bean>
		</property>
	</bean>

	<bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="${cas.securityContext.casProcessingFilterEntryPoint.loginUrl}" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>

	<bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="key" value="my_password_for_this_auth_provider_only" />
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="userDetailsService" ref="casUserDetailsService" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${cas.securityContext.ticketValidator.casServerUrlPrefix}" />
			</bean>
		</property>
	</bean>
</beans>