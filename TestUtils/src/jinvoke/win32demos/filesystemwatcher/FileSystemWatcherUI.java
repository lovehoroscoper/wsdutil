// FileSystemWatcherUI.java
// Gayathri Singh, March 2008, gayathri@byteblend.com

/* This class provides the GUI for FileSystemWatcher.
   This class is designed to be used along with FileSystemWatcher.
   
   Most of this class has been generated using a GUI designer. The method of interest is 
   startButtonActionPerformed() which creates a new instance of the FileSystemWatcher
   passing in the folder to watch, flags and output JTextArea.
   
   The stopButtonActionPerformed() method calls the stopWatching method on the FileSytemWatcher
   instance causing the ReadDirectoryChangesW loop to finish and the watcherThread to terminate.
   
   Usage: 
     java -cp c:\jinvoke\jinvoke.jar;. jinvoke.win32demos.filesystemwatcher.FileSystemWatcherUI
*/

package jinvoke.win32demos.filesystemwatcher;

import javax.swing.JFileChooser;

import javax.swing.UIManager;
import static com.jinvoke.win32.WinConstants.*;

public class FileSystemWatcherUI extends javax.swing.JFrame {
    FileSystemWatcher watcher;
    
    
    /** Creates new form FileSystemWatcherUI */
    public FileSystemWatcherUI() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
        folderLabel = new javax.swing.JLabel();
        dirTextField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        eventLabel = new javax.swing.JLabel();
        cbFileNameChanged = new javax.swing.JCheckBox();
        cbDirNameChanged = new javax.swing.JCheckBox();
        cbAttributeChanged = new javax.swing.JCheckBox();
        cbFileSizeChanged = new javax.swing.JCheckBox();
        cbWriteTimeChanged = new javax.swing.JCheckBox();
        cbCreationTimeChanged = new javax.swing.JCheckBox();
        cbAccessTimeChanged = new javax.swing.JCheckBox();
        cbSecDescChanged = new javax.swing.JCheckBox();
        cbWatchSubtree = new javax.swing.JCheckBox();
        stopButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        outputLabel = new javax.swing.JLabel();
        outputScrollPane = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File System Watcher");

        folderLabel.setText("Folder:");

        dirTextField.setText("C:\\");

            browseButton.setText("...");
            browseButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    browseButtonActionPerformed(evt);
                }
            });

            eventLabel.setText("Events to Watch:");

            cbFileNameChanged.setSelected(true);
            cbFileNameChanged.setText("File Name Changed");

            cbDirNameChanged.setSelected(true);
            cbDirNameChanged.setText("Folder Name Changed");

            cbAttributeChanged.setText("Attribute Changed");

            cbFileSizeChanged.setText("File Size Changed");

            cbWriteTimeChanged.setSelected(true);
            cbWriteTimeChanged.setText("Last Write Time Changed");

            cbCreationTimeChanged.setText("Creation Time Changed");

            cbAccessTimeChanged.setText("Last Access Time Changed");

            cbSecDescChanged.setText("Security Descriptor Changed");

            cbWatchSubtree.setSelected(true);
            cbWatchSubtree.setText("Watch Subdirectories");

            stopButton.setText("Stop");
            stopButton.setEnabled(false);
            stopButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    stopButtonActionPerformed(evt);
                }
            });

            startButton.setText("Start");
            startButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    startButtonActionPerformed(evt);
                }
            });

            outputLabel.setText("File System Events:");

            output.setColumns(20);
            output.setRows(5);
            outputScrollPane.setViewportView(output);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(outputScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(cbWatchSubtree))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(56, 56, 56)
                                    .addComponent(folderLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dirTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(browseButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(eventLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbFileNameChanged)
                                .addComponent(cbDirNameChanged)
                                .addComponent(cbAttributeChanged)
                                .addComponent(cbFileSizeChanged))
                            .addGap(13, 13, 13)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbSecDescChanged)
                                .addComponent(cbAccessTimeChanged)
                                .addComponent(cbCreationTimeChanged)
                                .addComponent(cbWriteTimeChanged))
                            .addGap(119, 119, 119))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(607, Short.MAX_VALUE)
                            .addComponent(startButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(stopButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(outputLabel)))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(folderLabel)
                        .addComponent(dirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(browseButton))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(cbWatchSubtree)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(eventLabel)
                        .addComponent(cbFileNameChanged)
                        .addComponent(cbCreationTimeChanged))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbDirNameChanged)
                        .addComponent(cbWriteTimeChanged))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbAttributeChanged)
                        .addComponent(cbAccessTimeChanged))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbFileSizeChanged)
                        .addComponent(cbSecDescChanged))
                    .addGap(6, 6, 6)
                    .addComponent(outputLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(outputScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(stopButton)
                        .addComponent(startButton))
                    .addGap(23, 23, 23))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        String folder = dirTextField.getText();
    	JFileChooser fc = new JFileChooser(folder);
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY );
	
        int status = fc.showOpenDialog(this);
		if( status == JFileChooser.APPROVE_OPTION){
	            folder = fc.getSelectedFile().getAbsolutePath();
		}
		dirTextField.setText(folder);
	}//GEN-LAST:event_browseButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        watcher.stopWatching();
        
		startButton.setEnabled(true);
		stopButton.setEnabled(false);
	}//GEN-LAST:event_stopButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        
        // set the flags for ReadDirectoryChangesW based on the user selection
        int flags = (cbAccessTimeChanged.isSelected()    ? FILE_NOTIFY_CHANGE_LAST_ACCESS : 0)
                + (cbAttributeChanged.isSelected()       ? FILE_NOTIFY_CHANGE_ATTRIBUTES : 0)
                + (cbCreationTimeChanged.isSelected()    ? FILE_NOTIFY_CHANGE_CREATION : 0)
                + (cbDirNameChanged.isSelected()         ? FILE_NOTIFY_CHANGE_DIR_NAME : 0)
                + (cbFileNameChanged.isSelected()        ? FILE_NOTIFY_CHANGE_FILE_NAME : 0)
                + (cbFileSizeChanged.isSelected()        ? FILE_NOTIFY_CHANGE_SIZE : 0)
                + (cbSecDescChanged.isSelected()         ? FILE_NOTIFY_CHANGE_SECURITY : 0)
                + (cbWriteTimeChanged.isSelected()       ? FILE_NOTIFY_CHANGE_LAST_WRITE : 0);
        
        // create a new FileSystemWatcher instance passing in the folder to watch, flags and output JTextArea
        watcher = new FileSystemWatcher(dirTextField.getText(), flags, cbWatchSubtree.isSelected(), output);
        watcher.startWatching();
        
        startButton.setEnabled(false);
        stopButton.setEnabled(true);
    }//GEN-LAST:event_startButtonActionPerformed
    
    public static void main(String args[]) {
        try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { }
                
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FileSystemWatcherUI ui = new FileSystemWatcherUI(); 
                ui.setLocationRelativeTo(null);
                ui.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JCheckBox cbAccessTimeChanged;
    private javax.swing.JCheckBox cbAttributeChanged;
    private javax.swing.JCheckBox cbCreationTimeChanged;
    private javax.swing.JCheckBox cbDirNameChanged;
    private javax.swing.JCheckBox cbFileNameChanged;
    private javax.swing.JCheckBox cbFileSizeChanged;
    private javax.swing.JCheckBox cbSecDescChanged;
    private javax.swing.JCheckBox cbWatchSubtree;
    private javax.swing.JCheckBox cbWriteTimeChanged;
    private javax.swing.JTextField dirTextField;
    private javax.swing.JLabel eventLabel;
    private javax.swing.JLabel folderLabel;
    private javax.swing.JTextArea output;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JScrollPane outputScrollPane;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
    
}
