// NewFileTypeUI.java
// Gayathri Singh, April 2008, gayathri@byteblend.com

/* This class adds the registry keys needed to register a new file type. 
   
   This class provides a GUI frontend for NewFileType class. It collects the information 
   graphically through a Swing UI, and invokes NewFileType.registerNewFileType() passing in 
   information needed to add a new file type with an associated application.
   
   Usage: 
     java -cp c:\jinvoke\jinvoke.jar;. jinvoke.win32demos.newfiletype.NewFileTypeUI
*/

package jinvoke.win32demos.newfiletype;

import com.jinvoke.win32.User32;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.text.MaskFormatter;


public class NewFileTypeUI extends javax.swing.JFrame {
    
    NewFileType newFileType;
    
    /** Creates new form NewFileTypeUI */
    public NewFileTypeUI() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        txtIcon = new javax.swing.JTextField();
        MaskFormatter formatter;
        try {
            formatter = new MaskFormatter("AAA");
        } catch (Exception e)
        {
            formatter = new MaskFormatter();
            System.out.println(e.getStackTrace());
        }
        txtFileExt = new JFormattedTextField(formatter);
        btnBrowse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtProgID = new javax.swing.JTextField();
        btnRegisterFileType = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("New File Type Demo");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Register New File Type"));

        label1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        label1.setText("Enter File Extension:");

        label2.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        label2.setText("Select an icon for the new file:");

        txtIcon.setText("C:\\JInvokeWin32Demos\\mstsc.ico");

        txtFileExt.setText("foo");

        btnBrowse.setText("...");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel1.setText("Enter File Description:");

        txtDescription.setText("My Foo File");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel2.setText("Enter Program Identifier:");

        txtProgID.setText("Win32Demos.FooApp.1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFileExt, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(txtIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtDescription)
                        .addComponent(txtProgID, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProgID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFileExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBrowse, jLabel1, jLabel2, label1, label2, txtDescription, txtFileExt, txtIcon, txtProgID});

        btnRegisterFileType.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        btnRegisterFileType.setText("Register New File Type");
        btnRegisterFileType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterFileTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(254, Short.MAX_VALUE)
                .addComponent(btnRegisterFileType)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegisterFileType)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed

        JFileChooser fileChooser = new JFileChooser(".");        
        fileChooser.addChoosableFileFilter(new IconFilter());
        fileChooser.setAcceptAllFileFilterUsed(false);
        int status = fileChooser.showOpenDialog(null);
        if (status == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
          System.out.println(selectedFile.getParent());
          System.out.println(selectedFile.getName());
          txtIcon.setText(selectedFile.getPath());
        } else if (status == JFileChooser.CANCEL_OPTION) {
          System.out.println(JFileChooser.CANCEL_OPTION);
        }

    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnRegisterFileTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterFileTypeActionPerformed
        // TODO add your handling code here:
        if (txtFileExt.getText().equals(""))
        {
            User32.MessageBox(0, "Please enter a file extension", "New File Type Registration Error", WIDTH);
            return;
        }
        if (txtProgID.getText().equals(""))
        {
            User32.MessageBox(0, "Please enter program ID", "New File Type Registration Error", WIDTH);
            return;
        }
        if (txtDescription.getText().equals(""))
        {
            User32.MessageBox(0, "Please enter a file description", "New File Type Registration Error", WIDTH);
            return;
        }
        if (txtIcon.getText().equals(""))
        {
            User32.MessageBox(0, "Please enter path to file icon", "New File Type Registration Error", WIDTH);
            return;
        }
        newFileType = new NewFileType();
        newFileType.registerNewFileType(txtFileExt.getText(), txtProgID.getText(), txtDescription.getText(), txtIcon.getText());
    }//GEN-LAST:event_btnRegisterFileTypeActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
         try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    
                NewFileTypeUI ui = new NewFileTypeUI(); 
                ui.setLocationRelativeTo(null);
                ui.setVisible(true);
                }
            });
         } catch (Exception ex) {
            System.out.println(ex.toString());
        } 
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnRegisterFileType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JFormattedTextField txtFileExt;
    private javax.swing.JTextField txtIcon;
    private javax.swing.JTextField txtProgID;
    // End of variables declaration//GEN-END:variables
    
    class IconFilter extends FileFilter {

        //Accept all ico files and directories.
        public boolean accept(File f) {
            if (f.isDirectory()) {
                return true;
            }
            String extension = getExtension(f);
            if (extension != null) {
                if (extension.equals("ico")){
                        return true;
                } else {
                    return false;
                }
            }
            return false;
        }

        //The description of this filter
        public String getDescription() {
            return "Ico files";
        }
        private String getExtension(File f) {
            String ext = null;
            String s = f.getName();
            int i = s.lastIndexOf('.');

            if (i > 0 &&  i < s.length() - 1) {
                ext = s.substring(i+1).toLowerCase();
            }
            return ext;
        }
    }

}


