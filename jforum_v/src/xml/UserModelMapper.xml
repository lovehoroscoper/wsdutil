<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserModel">

	<resultMap id="pendingActivations_resultmap" type="user">
		<result column="user_id" property="id" />
		<result column="username" property="username" />
		<result column="user_regdate" property="registrationDate"
			javaType="java.util.Date" />
	</resultMap>

	<resultMap id="selectGroups_resultmap" type="group">
		<result column="group_name" property="name" />
		<result column="group_id" property="id" />
	</resultMap>
	
	<resultMap id="findByName_resultmap" type="user">
		<result column="user_id" property="id" />
		<result column="username" property="username" />
		<result column="user_email" property="email" />
		<result column="deleted" property="deleted" />
	</resultMap>


	<select id="pendingActivations" resultMap="pendingActivations_resultmap">
		SELECT user_id, username, user_regdate FROM jforum_users WHERE user_actkey
		IS NOT NULL ORDER BY user_id
	</select>

	<select id="selectById" parameterType="int" resultType="hashmap">
		SELECT COUNT(pm.privmsgs_to_userid) AS private_messages, u.*
		FROM jforum_users u
		LEFT JOIN jforum_privmsgs pm ON pm.privmsgs_type = 1 AND
		pm.privmsgs_to_userid = u.user_id
		WHERE u.user_id = #{userId}
		GROUP BY pm.privmsgs_to_userid
	</select>

	<select id="selectGroups" parameterType="int" resultMap="selectGroups_resultmap">
		SELECT ug.group_id, g.group_name FROM jforum_user_groups ug, jforum_groups g
		WHERE ug.group_id = g.group_id
		AND ug.user_id = #{userId}
		ORDER BY g.group_id
	</select>

	<select id="selectByName" parameterType="string" resultType="hashmap">
		SELECT * FROM jforum_users WHERE LOWER(username) = LOWER(#{username})
	</select>

	<update id="deletedStatus" parameterType="hashmap">
		UPDATE jforum_users SET deleted = #{deleted} WHERE user_id = #{userId}
	</update>

	<update id="update" parameterType="user">
		UPDATE jforum_users SET user_aim = #{aim},
		user_avatar = #{avatar},
		gender = #{gender},
		themes_id = #{themeId},
		user_allow_pm = #{privateMessagesEnabled,typeHandler=booleanToIntHandler},
		user_allowavatar = #{avatarEnabled,typeHandler=booleanToIntHandler},
		user_allowbbcode = #{bbCodeEnabled,typeHandler=booleanToIntHandler},
		user_allowhtml = #{htmlEnabled,typeHandler=booleanToIntHandler},
		user_allowsmilies = #{smiliesEnabled,typeHandler=booleanToIntHandler},
		user_email = #{email},
		user_from = #{from},
		user_icq = #{icq},
		user_interests = #{interests},
		user_occ = #{occupation},
		user_sig = #{signature},
		user_website = #{webSite},
		user_yim = #{yim},
		user_msnm = #{msnm},
		user_password = #{password},
		user_viewemail = #{viewEmailEnabled,typeHandler=booleanToIntHandler},
		user_viewonline =
		#{viewOnlineEnabled,typeHandler=booleanToIntHandler},
		user_notify = #{notifyOnMessagesEnabled,typeHandler=booleanToIntHandler},
		user_attachsig =
		#{attachSignatureEnabled,typeHandler=booleanToIntHandler},
		username = #{username},
		user_lang = #{lang},
		user_notify_pm = #{notifyPrivateMessagesEnabled,typeHandler=booleanToIntHandler},
		user_biography = #{biography},
		user_lastvisit = #{lastVisit},
		user_notify_always = #{notifyAlways,typeHandler=booleanToIntHandler},
		user_notify_text = #{notifyText,typeHandler=booleanToIntHandler},
		rank_id = #{rankId},
		WHERE user_id = #{id},
	</update>

	<insert id="addNew" parameterType="user" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO jforum_users (username, user_password, user_email, user_regdate,
		user_actkey, rank_id) VALUES (#{username}, #{password}, #{email},
		NOW(), #{activationKey}, 0)
	</insert>

	<insert id="addToGroup" parameterType="hashmap">
		INSERT INTO jforum_user_groups ( user_id, group_id ) VALUES ( #{userId},
		#{groupId} )
	</insert>

	<insert id="addNewWithId">
		INSERT INTO jforum_users (username, user_password, user_email, user_regdate,
		user_actkey, user_id) VALUES (#{username}, #{password}, #{email},
		NOW(), #{activationKey}, #{id})
	</insert>

	<update id="decrementPosts" parameterType="int">
		UPDATE jforum_users SET user_posts = user_posts - 1 WHERE user_id =
		#{userId}
	</update>

	<update id="incrementPosts" parameterType="int">
		UPDATE jforum_users SET user_posts = user_posts + 1 WHERE user_id =
		#{userId}
	</update>

	<update id="rankingId">
		UPDATE jforum_users SET rank_id = #{rankingId} WHERE user_id = #{userId}
	</update>

	<update id="activeStatus" parameterType="hashmap">
		UPDATE jforum_users SET user_active = #{active} WHERE user_id = #{userId}
	</update>

	<update id="deletedStatus" parameterType="hashmap">
		UPDATE jforum_users SET deleted = #{deleted} WHERE user_id = #{userId}
	</update>

	<select id="selectAllByLimit" parameterType="hashmap"
		resultType="hashmap">
		SELECT user_email, user_id, user_posts, user_regdate, username, deleted,
		user_karma, user_from, user_website, user_viewemail
		FROM jforum_users ORDER BY username LIMIT #{startFrom}, #{count}
	</select>

	<select id="selectAll" resultType="hashmap">
		SELECT user_email, user_id, user_posts, user_regdate, username, deleted,
		user_karma, user_from,
		user_website, user_viewemail FROM jforum_users ORDER BY user_id
	</select>

	<select id="selectAllByGroup" resultType="hashmap"
		parameterType="hashmap">
		SELECT user_email, u.user_id, user_posts, user_regdate, username, deleted,
		user_karma, user_from,
		user_website, user_viewemail
		FROM jforum_users u, jforum_user_groups ug
		WHERE u.user_id = ug.user_id
		AND ug.group_id = #{groupId}
		ORDER BY user_id LIMIT #{start}, #{count}
	</select>

	<select id="lastUserRegistered" resultType="hashmap">
		SELECT user_id, username FROM jforum_users ORDER BY user_regdate DESC LIMIT
		1
	</select>

	<select id="totalUsers" resultType="int">
		SELECT COUNT(1) as total_users FROM jforum_users
	</select>

	<select id="totalUsersByGroup" parameterType="hashmap">
		SELECT COUNT(1) FROM jforum_user_groups WHERE group_id = #{groupId}
	</select>

<select id="isDeleted" parameterType="int" resultType="int">
	SELECT deleted FROM jforum_users WHERE user_id = #{userId}
</select>

<select id="isUsernameRegistered" resultType="int" parameterType="string">
	SELECT COUNT(1) as registered FROM jforum_users WHERE LOWER(username) = LOWER(#{username})
</select>

<delete id="removeFromGroup" parameterType="hashmap">
	DELETE FROM jforum_user_groups WHERE user_id = #{userId} AND group_id = #{groupId}
</delete>

<update id="saveNewPassword" parameterType="hashmap">
	UPDATE jforum_users SET user_password = #{password}, security_hash = null WHERE user_email = #{email}
</update>

<select id="validateLostPasswordHash" resultType="int" parameterType="hashmap">
	SELECT COUNT(1) AS valid FROM jforum_users WHERE security_hash = #{hash} AND user_email = #{email}
</select>

<update id="writeLostPasswordHash" parameterType="hashmap">
	UPDATE jforum_users SET security_hash = #{hash} WHERE user_email = #{email}
</update>

<select id="getUsernameByEmail" parameterType="string" resultType="string">
	SELECT username FROM jforum_users WHERE user_email = #{email}
</select>

<select id="findByName" parameterType="string" resultMap="findByName_resultmap">
	SELECT user_id, username, user_email, deleted FROM jforum_users WHERE UPPER(username) LIKE UPPER(#{username})
</select>

<select id="validateActivationKeyHash" parameterType="hashmap" resultType="int">
	SELECT COUNT(1) AS valid FROM jforum_users WHERE user_actkey = #{hash} AND user_id = #{userId}
</select>

<update id="writeUserActive" parameterType="int">
	UPDATE jforum_users SET user_active = 1, user_actkey = NULL WHERE user_id = #{userId}
</update>

<update id="updateUsername" parameterType="hashmap">
	UPDATE jforum_users SET username = #{username} WHERE user_id = #{userId}
</update>

<select id="getUsername" parameterType="hashmap" resultType="string">
	SELECT username FROM jforum_users WHERE user_id = ?
</select>

<update id="saveUserAuthHash" parameterType="hashmap">
	UPDATE jforum_users SET user_authhash = #{hash} WHERE user_id = #{userId}
</update>

<select id="getUserAuthHash" parameterType="int" resultType="string"> 
	SELECT user_authhash FROM jforum_users WHERE user_id = #{userId}
</select>

<select id="findByEmail" parameterType="string" resultType="hashmap">
	SELECT * FROM jforum_users WHERE LOWER(user_email) = LOWER(#{email})
</select>

</mapper>