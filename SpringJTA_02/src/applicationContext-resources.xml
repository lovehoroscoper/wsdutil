<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/mvc 
     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
     ">
	<!-- 自动搜索@Controller标注的类 -->
	<context:annotation-config />

<!-- 
http://www.cnblogs.com/huangjingzhou/articles/2012011.html
 -->

	<!-- <mvc:annotation-driven /> -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- 启用AspectJ对annotation的支持 -->
	<aop:aspectj-autoproxy />


	<bean id="dataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean">
		<property name="uniqueResourceName" value="mysql_jndi1" />
		<property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="poolSize" value="3" />
		<property name="maxPoolSize" value="100" />
		<property name="minPoolSize" value="1" />
		<property name="xaProperties">
			<props>
				<prop key="user">root</prop>
				<prop key="password">root</prop>
				<prop key="url">jdbc:mysql://127.0.0.1/crm</prop>
			</props>
		</property>
	</bean>
	<bean id="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean">
		<property name="uniqueResourceName" value="mysql_jndi2" />
		<property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="poolSize" value="3" />
		<property name="maxPoolSize" value="100" />
		<property name="minPoolSize" value="1" />
		<property name="xaProperties">
			<props>
				<prop key="user">root</prop>
				<prop key="password">root</prop>
				<prop key="url">jdbc:mysql://127.0.0.1/crm2</prop>
			</props>
		</property>
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="240" />
	</bean>

	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>

	<!-- mysql 下面ibatis 好像不起作用 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceOperation" expression="execution(* com.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="dddd*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>


	<!-- 这样也不行 <bean id="testTypeServiceTarget" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"> <property name="transactionManager"> 
		<ref bean="transactionManager" /> </property> <property name="target"> <ref bean="testTypeService" /> </property> <property name="transactionAttributes"> 
		<props> <prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop> </props> </property> </bean> -->

	<bean id="sqlMapClient1" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean" autowire="byName">
		<property name="configLocation">
			<value>classpath:ds1-SqlMap-Config.xml</value>
		</property>
		<property name="dataSource" ref="dataSource1" />
	</bean>

	<bean id="sqlMapClient2" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean" autowire="byName">
		<property name="configLocation">
			<value>classpath:ds2-SqlMap-Config.xml</value>
		</property>
		<property name="dataSource" ref="dataSource2" />
	</bean>

	<!-- 将目标对象配置到IOC容器中 -->
	<bean id="baseDao" class="com.wsd.dao.base.impl.BaseDaoImpl"></bean>

</beans>